)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
model <- generate_markovify_model( # build the text model
input_text = sayings$text, # use the text as the input
max_overlap_ratio = 0.85,
max_overlap_total = 40
)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
sayings$text <- sayings$text %>% # standardize the words
str_replace_all(c("[[:punct:]]", "",
"what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(sayings)
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
View(texts_to_annotate)
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
sayings$text <- sayings$text %>% # standardize the words
str_replace_all(c("[[:punct:]]", "",
"what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(texts_to_annotate)
View(texts_to_annotate)
View(sayings)
View(sayings)
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
hearts
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
View(sayings)
sayings$text <- sayings$text %>% # standardize the words
str_replace_all(c("[[:punct:]]", "",
"what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(sayings)
View(sayings)
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
View(sayings)
sayings$text
sayings$text <- sayings$text %>% # standardize the words
str_replace_all(c("[[:punct:]]", "",
"what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u "))
sayings$text
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
sayings <- hearts %>%
sayings$text
sayings$text
friends <- hearts %>%
gs_read(ws = 3) %>%
mutate(email = address) %>% # i wanted to change the name of this variable
select(-address)
final <- texts_to_annotate %>%
sample_n(nrow(friends), replace = TRUE) # take as many samples as we have friends in the dataset i.e. friends to email
friends$text <- final$heart_sayings # add the text to the friends data for when we send them
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
# sayings$text <- sayings$text %>% # standardize the words
#   str_replace_all(c("[[:punct:]]", "",
#                     "what" = "wut",
#                     " are " = "r",
#                     "love" = "luv",
#                     " for " = "4",
#                     "too " = "2",
#                     " to " = "2",
#                     "your" = "ur",
#                     "you're" = "ur",
#                     "thanks" = "thx",
#                     "night" = "nite",
#                     " you are " = "ur",
#                     "you " = "u ",
#                     " you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(sayings)
sayings$text <- sayings$text %>% # standardize the words
str_replace_all(c("[[:punct:]]", "",
"what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(sayings)
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
View(sayings)
View(sayings)
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
# sayings$text <- sayings$text %>% # standardize the words
#   str_replace_all(c("[[:punct:]]", "",
#                     "what" = "wut",
#                     " are " = "r",
#                     "love" = "luv",
#                     " for " = "4",
#                     "too " = "2",
#                     " to " = "2",
#                     "your" = "ur",
#                     "you're" = "ur",
#                     "thanks" = "thx",
#                     "night" = "nite",
#                     " you are " = "ur",
#                     "you " = "u ",
#                     " you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
model <- generate_markovify_model( # build the text model
input_text = sayings$text, # use the text as the input
max_overlap_ratio = 0.85,
max_overlap_total = 40
)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
friends <- hearts %>%
gs_read(ws = 3) %>%
mutate(email = address) %>% # i wanted to change the name of this variable
select(-address)
final <- texts_to_annotate %>%
sample_n(nrow(friends), replace = TRUE) # take as many samples as we have friends in the dataset i.e. friends to email
friends$text <- final$heart_sayings # add the text to the friends data for when we send them
heart <- image_read("C:\\Users\\katie\\Documents\\fun_projects\\conversation_hearts\\pink-heart.png") # the base heart image we used
all_paths <- c() # create an empty vector for local paths to the images
for (i in 1:nrow(friends)){
path <- paste0("C:\\Users\\katie\\Documents\\conversation_hearts\\images\\", friends$name[[i]], ".png") # reference the images by the person's first name so I can track them easily
all_paths <- c(all_paths, path) # add this path to the vector. For only 32 this doesn't get too slow.
img <- heart %>% # start with the base image
image_scale("600") %>% # make it big! <3
image_annotate(friends$text[[i]], color = "white", gravity = "center", size = 40) %>% # write the generated text in white in the middle of the heart with size 40 font
image_write(path = path, format = "png") # save the image as {name}.png
}
sayings$text <- sayings$text %>%
str_replace_all("[[:punct:]]", "") # standardize the words
View(sayings)
str_replace_all(c("what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
sayings$text <- sayings$text %>%
str_replace_all("[[:punct:]]", "") %>% # standardize the words
str_replace_all(c("what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
View(sayings)
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
sayings$text <- sayings$text %>%
str_replace_all("[[:punct:]]", "") %>% # standardize the words
str_replace_all(c("what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
model <- generate_markovify_model( # build the text model
input_text = sayings$text, # use the text as the input
max_overlap_ratio = 0.85,
max_overlap_total = 40
)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
friends <- hearts %>%
gs_read(ws = 3) %>%
mutate(email = address) %>% # i wanted to change the name of this variable
select(-address)
final <- texts_to_annotate %>%
sample_n(nrow(friends), replace = TRUE) # take as many samples as we have friends in the dataset i.e. friends to email
friends$text <- final$heart_sayings # add the text to the friends data for when we send them
heart <- image_read("C:\\Users\\katie\\Documents\\fun_projects\\conversation_hearts\\pink-heart.png") # the base heart image we used
all_paths <- c() # create an empty vector for local paths to the images
for (i in 1:nrow(friends)){
path <- paste0("C:\\Users\\katie\\Documents\\conversation_hearts\\images\\", friends$name[[i]], ".png") # reference the images by the person's first name so I can track them easily
all_paths <- c(all_paths, path) # add this path to the vector. For only 32 this doesn't get too slow.
img <- heart %>% # start with the base image
image_scale("600") %>% # make it big! <3
image_annotate(friends$text[[i]], color = "white", gravity = "center", size = 40) %>% # write the generated text in white in the middle of the heart with size 40 font
image_write(path = path, format = "png") # save the image as {name}.png
}
friends$path <- all_paths # add paths to the dataset
friends <- rbind(friends, c("Katie Jolly", "katiejolly6@gmail.com", "", ""))
parcel <- parcel_create(friends,
sender_name = "Katie Jolly",
sender_email = "katiejolly6@gmail.com",
subject = "a valentine for you!",
template = our_template)
library(ponyexpress) # send the emails
parcel <- parcel_create(friends,
sender_name = "Katie Jolly",
sender_email = "katiejolly6@gmail.com",
subject = "a valentine for you!",
template = our_template)
We love having you in our lives and wanted to take the time to tell you!
body <- "Dear {name},
Happy Valentine's Day!! We made a special heart just for you :D
<img src = '{github_paths}'> </img>
(As an aside, we randomly generated the text with R and have no idea what we sent to you. Ask Katie
if you want to know more!)
We love having you in our lives and wanted to take the time to tell you!
Much love to you <3
Katie, Pippa, and Matthew
<img src = 'https://media.giphy.com/media/26xBRiIYbyjCzYMAU/giphy.gif'> </img>"
friends <- rbind(friends, c("Katie Jolly", "katiejolly6@gmail.com", "", ""))
our_template <- glue::glue(glitter_template)
parcel <- parcel_create(friends,
sender_name = "Katie Jolly",
sender_email = "katiejolly6@gmail.com",
subject = "a valentine for you!",
template = our_template)
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
library(ponyexpress) # send the emails
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
sayings$text <- sayings$text %>%
str_replace_all("[[:punct:]]", "") %>% # standardize the words
str_replace_all(c("what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
model <- generate_markovify_model( # build the text model
input_text = sayings$text, # use the text as the input
max_overlap_ratio = 0.85,
max_overlap_total = 40
)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
friends <- hearts %>%
gs_read(ws = 3) %>%
mutate(email = address) %>% # i wanted to change the name of this variable
select(-address)
final <- texts_to_annotate %>%
sample_n(nrow(friends), replace = TRUE) # take as many samples as we have friends in the dataset i.e. friends to email
friends$text <- final$heart_sayings # add the text to the friends data for when we send them
heart <- image_read("C:\\Users\\katie\\Documents\\fun_projects\\conversation_hearts\\pink-heart.png") # the base heart image we used
all_paths <- c() # create an empty vector for local paths to the images
for (i in 1:nrow(friends)){
path <- paste0("C:\\Users\\katie\\Documents\\conversation_hearts\\images\\", friends$name[[i]], ".png") # reference the images by the person's first name so I can track them easily
all_paths <- c(all_paths, path) # add this path to the vector. For only 32 this doesn't get too slow.
img <- heart %>% # start with the base image
image_scale("600") %>% # make it big! <3
image_annotate(friends$text[[i]], color = "white", gravity = "center", size = 40) %>% # write the generated text in white in the middle of the heart with size 40 font
image_write(path = path, format = "png") # save the image as {name}.png
}
friends$path <- all_paths # add paths to the dataset
github_paths <- c()
for (i in 1:nrow(emails)){
p <- paste0("https://raw.githubusercontent.com/katiejolly/conversation-hearts/master/images/", emails$name[[i]], ".png")
github_paths <- c(github_paths, p) # this time we don't have to create another image, just the path!
}
# packages
library(googlesheets) # read in the sheet
library(tidyverse) # clean the text
library(markovifyR) # make the markov chains
library(magick) # image processing
library(ponyexpress) # send the emails
# data
hearts <- gs_title("conversation_hearts") # read in my conversation_hearts sheet
sayings <- hearts %>%
gs_read(ws = 1) # the text we thought of was in the first sheet
# cleaning the text
sayings$text <- sayings$text %>%
str_replace_all("[[:punct:]]", "") %>% # standardize the words
str_replace_all(c("what" = "wut",
" are " = "r",
"love" = "luv",
" for " = "4",
"too " = "2",
" to " = "2",
"your" = "ur",
"you're" = "ur",
"thanks" = "thx",
"night" = "nite",
" you are " = "ur",
"you " = "u ",
" you " = " u ")) # all the abbreviations we agreed to use to be more ~hip~
model <- generate_markovify_model( # build the text model
input_text = sayings$text, # use the text as the input
max_overlap_ratio = 0.85,
max_overlap_total = 40
)
texts_to_annotate <- markovify_text( # make the strings
markov_model = model, # use the model we just made
maximum_sentence_length = NULL, # without a max sentence length
output_column_name = 'heart_sayings',
count = 100,
tries = 600,
only_distinct = TRUE, # we still just wanted distinct messages
return_message = TRUE
)
friends <- hearts %>%
gs_read(ws = 3) %>%
mutate(email = address) %>% # i wanted to change the name of this variable
select(-address)
final <- texts_to_annotate %>%
sample_n(nrow(friends), replace = TRUE) # take as many samples as we have friends in the dataset i.e. friends to email
friends$text <- final$heart_sayings # add the text to the friends data for when we send them
heart <- image_read("C:\\Users\\katie\\Documents\\fun_projects\\conversation_hearts\\pink-heart.png") # the base heart image we used
all_paths <- c() # create an empty vector for local paths to the images
for (i in 1:nrow(friends)){
path <- paste0("C:\\Users\\katie\\Documents\\conversation_hearts\\images\\", friends$name[[i]], ".png") # reference the images by the person's first name so I can track them easily
all_paths <- c(all_paths, path) # add this path to the vector. For only 32 this doesn't get too slow.
img <- heart %>% # start with the base image
image_scale("600") %>% # make it big! <3
image_annotate(friends$text[[i]], color = "white", gravity = "center", size = 40) %>% # write the generated text in white in the middle of the heart with size 40 font
image_write(path = path, format = "png") # save the image as {name}.png
}
friends$path <- all_paths # add paths to the dataset
github_paths <- c()
for (i in 1:nrow(friends)){
p <- paste0("https://raw.githubusercontent.com/katiejolly/conversation-hearts/master/images/", friends$name[[i]], ".png")
github_paths <- c(github_paths, p) # this time we don't have to create another image, just the path!
}
friends$github_paths <- github_paths # add github paths to images
body <- "Dear {name},
Happy Valentine's Day!! We made a special heart just for you :D
<img src = '{github_paths}'> </img>
(As an aside, we randomly generated the text with R and have no idea what we sent to you. Ask Katie
if you want to know more!)
We love having you in our lives and wanted to take the time to tell you!
Much love to you <3
Katie, Pippa, and Matthew
<img src = 'https://media.giphy.com/media/26xBRiIYbyjCzYMAU/giphy.gif'> </img>"
friends <- rbind(friends, c("Katie Jolly", "katiejolly6@gmail.com", "", ""))
our_template <- glue::glue(glitter_template)
parcel <- parcel_create(friends,
sender_name = "Katie Jolly",
sender_email = "katiejolly6@gmail.com",
subject = "a valentine for you!",
template = our_template)
parcel_preview(parcel)
body <- "Dear {name},
Happy Valentine's Day!! We made a special heart just for you :D
<img src = '{github_paths}'> </img>
(As an aside, we randomly generated the text with R and have no idea what we sent to you. Ask Katie if you want to know more!)
We love having you in our lives and wanted to take the time to tell you!
Much love to you <3
Katie, Pippa, and Matthew
<img src = 'https://media.giphy.com/media/26xBRiIYbyjCzYMAU/giphy.gif'> </img>"
parcel <- parcel_create(friends,
sender_name = "Katie Jolly",
sender_email = "katiejolly6@gmail.com",
subject = "a valentine for you!",
template = our_template)
parcel_preview(parcel)
head(texts_to_annotate)
df <- data.frame(col1 = c(1,2,3), col2 = c(2,3,4))
df
deparse(df)
dput(df)
install.packages("bookdown")
